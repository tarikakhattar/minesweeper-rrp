{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@tinyslice+devtools-plugin@0.8.0/node_modules/@tinyslice/devtools-plugin/index.js"],
  "sourcesContent": ["import { Subscription, tap } from \"rxjs\";\nconst DEFAULT_DEVTOOLS_OPTIONS = {\n  name: \"TinySlice\"\n};\nconst jsonUndefinedReplacer = (_key, value) => value ?? null;\nconst normalizeUndefined = (obj) => {\n  const stringified = JSON.stringify(obj, jsonUndefinedReplacer);\n  return JSON.parse(stringified);\n};\nclass TinySliceDevtoolPlugin {\n  constructor(options) {\n    this.options = options;\n    this.extension = TinySliceDevtoolPlugin.getExtension();\n  }\n  extension;\n  extensionConnection;\n  sink = new Subscription();\n  unsubscribeStateInjector;\n  hooks;\n  committedState;\n  lastState;\n  initialState;\n  actionId = 0;\n  actions = {};\n  actionsTurnedOff = /* @__PURE__ */ new Set();\n  additionalTriggers = [];\n  registerAdditionalTrigger = (trigger) => {\n    this.additionalTriggers.push(trigger);\n  };\n  register = (hooks) => {\n    this.hooks = hooks;\n    this.initialState = JSON.stringify(normalizeUndefined(hooks.initialState));\n  };\n  onError = (error) => {\n    console.log(\"Error from store:\", error);\n  };\n  connect(connection) {\n    this.lastState = this.initialState ? JSON.parse(this.initialState) : void 0;\n    this.committedState = this.initialState;\n    connection.init(this.lastState);\n    this.sink.add(\n      this.hooks.state$.pipe(\n        tap(({ actionPacket, nextState }) => {\n          this.lastState = normalizeUndefined(nextState);\n          this.actions[this.actionId] = actionPacket;\n          this.actionId += 1;\n          connection.send(actionPacket, this.lastState);\n        })\n      ).subscribe()\n    );\n    this.unsubscribeStateInjector = connection.subscribe((message) => {\n      if (message.type === \"DISPATCH\") {\n        switch (message.payload?.type) {\n          case \"JUMP_TO_ACTION\": {\n            this.hooks.stateInjector(JSON.parse(message.state));\n            break;\n          }\n          case \"COMMIT\": {\n            console.log(\"COMMIT\", this.lastState);\n            if (this.lastState) {\n              connection.init(this.lastState);\n              this.committedState = JSON.stringify(this.lastState);\n            } else {\n              connection.error(\"Nothing to commit\");\n            }\n            break;\n          }\n          case \"ROLLBACK\": {\n            if (this.committedState) {\n              const parsedCommittedState = JSON.parse(this.committedState);\n              connection.init(parsedCommittedState);\n              this.hooks.stateInjector(parsedCommittedState);\n            } else {\n              connection.error(\"No commit to rollback to\");\n            }\n            break;\n          }\n          case \"RESET\": {\n            const initialState = JSON.parse(this.initialState);\n            this.hooks.stateInjector(initialState);\n            connection.init(initialState);\n            break;\n          }\n          case \"IMPORT_STATE\": {\n            const computedStates = message.payload.nextLiftedState.computedStates;\n            const actions = Object.values(message.payload.nextLiftedState.actionsById);\n            const lastState = computedStates[actions.length - 1]?.state;\n            for (const [index, action] of actions.entries()) {\n              const state = computedStates[index];\n              if (state) {\n                if (action.action.type === \"@@INIT\") {\n                  connection.init(state.state);\n                } else {\n                  connection.send(action.action, state.state);\n                }\n              }\n            }\n            if (lastState) {\n              this.hooks.stateInjector(lastState);\n            }\n            break;\n          }\n          case \"TOGGLE_ACTION\": {\n            if (this.actionsTurnedOff.has(message.payload.id)) {\n              this.actionsTurnedOff.delete(message.payload.id);\n            } else {\n              this.actionsTurnedOff.add(message.payload.id);\n            }\n            break;\n          }\n        }\n      }\n      for (const trigger of this.additionalTriggers)\n        trigger();\n    });\n  }\n  disconnect() {\n    this.extension?.disconnect();\n  }\n  start = () => {\n    this.extensionConnection = this.extension?.connect({\n      ...DEFAULT_DEVTOOLS_OPTIONS,\n      ...this.options\n    });\n    if (this.extensionConnection) {\n      this.connect(this.extensionConnection);\n    }\n  };\n  stop = () => {\n    this.sink.unsubscribe();\n    this.unsubscribeStateInjector?.();\n    this.extensionConnection?.unsubscribe();\n    if (this.extensionConnection) {\n      this.disconnect();\n    }\n    this.sink = new Subscription();\n  };\n  error(error) {\n    this.extensionConnection?.error(error);\n  }\n  static getExtension() {\n    return globalThis.__REDUX_DEVTOOLS_EXTENSION__;\n  }\n}\nexport {\n  DEFAULT_DEVTOOLS_OPTIONS,\n  TinySliceDevtoolPlugin\n};\n"],
  "mappings": "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",
  "names": []
}
