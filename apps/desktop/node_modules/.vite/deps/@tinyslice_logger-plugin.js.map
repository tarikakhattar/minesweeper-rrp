{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@tinyslice+logger-plugin@0.8.0/node_modules/@tinyslice/logger-plugin/index.js"],
  "sourcesContent": ["import { isNotNullish } from \"@alexaegis/common\";\nimport { TINYSLICE_PREFIX } from \"@tinyslice/core\";\nconst brightFgColor = \"#ffe36a\";\nconst dimFgColor = \"#f9c33c\";\nconst defaultCss = `background: #222; color: ${brightFgColor};`;\nconst defaultCssDim = `background: #222; color: ${dimFgColor};`;\nconst successCss = `background: #090; color: ${brightFgColor};`;\nconst failCss = `background: #900; color: ${brightFgColor};`;\nconst normalCss = \"background: #222; color: #fff;\";\nconst hiddenCss = \"background: #222; color: #444;\";\nconst isSuccessMessage = (message) => message.toLowerCase().includes(\"success\");\nconst isFailureMessage = (message) => message.toLowerCase().includes(\"fail\");\nconst isErrorMessage = (message) => message.toLowerCase().includes(\"error\");\nconst isTinySliceMessage = (message) => message.includes(TINYSLICE_PREFIX);\nconst getMessageCss = (message, isInternal) => {\n  if (isSuccessMessage(message)) {\n    return successCss;\n  } else if (isFailureMessage(message) || isErrorMessage(message)) {\n    return failCss;\n  } else {\n    return isInternal ? defaultCssDim : defaultCss;\n  }\n};\nconst bracketMatcher = /\\[[^\\]]*]/g;\nconst separateMessage = (message) => {\n  const a = message.split(bracketMatcher);\n  const b = message.match(bracketMatcher) ?? [];\n  const result = [a[0]];\n  for (let i = 1; i < a.length; i++) {\n    result.push(b[i - 1], a[i]);\n  }\n  return result.filter(isNotNullish);\n};\nconst colorizeLogString = (message) => {\n  const segments = separateMessage(message);\n  const codedSegments = [];\n  const colorisedSegments = [];\n  const isInternal = segments.some((segment) => isTinySliceMessage(segment));\n  for (const segment of segments) {\n    const css = getMessageCss(segment, isInternal);\n    if (css) {\n      codedSegments.push(`%c${segment}`);\n      colorisedSegments.push(getMessageCss(segment, isInternal));\n    } else {\n      codedSegments.push(segment);\n      colorisedSegments.push(\"\");\n    }\n  }\n  return [\"🍕 \" + codedSegments.join(\"\"), ...colorisedSegments];\n};\nconst DEFAULT_OPTIONS = {\n  ignorePaths: [],\n  ignoreActions: [],\n  disableGrouping: false,\n  onlyRoot: false,\n  onlyTimers: false\n};\nclass TinySliceLoggerPlugin {\n  options;\n  first = false;\n  enabled = false;\n  lastTimer = void 0;\n  pluginOptions = {\n    passToChildren: true\n  };\n  constructor(options) {\n    this.options = {\n      ...DEFAULT_OPTIONS,\n      ...options\n    };\n  }\n  isIgnored(path, actionPacket) {\n    return this.options.ignorePaths.some(\n      (pathIgnore) => typeof pathIgnore === \"string\" ? path.startsWith(pathIgnore) || actionPacket.type.startsWith(pathIgnore) : pathIgnore.test(path)\n    ) || this.options.ignoreActions.some(\n      (actionIgnore) => typeof actionIgnore === \"string\" ? actionIgnore === actionPacket.type : actionIgnore.test(actionPacket.type)\n    );\n  }\n  sliceOptions() {\n    return this.pluginOptions;\n  }\n  preRootReduce(absolutePath, _state, action) {\n    this.first = true;\n    if (this.enabled && !this.isIgnored(absolutePath, action)) {\n      console.time(\"entire reduce took\");\n      if (this.options.disableGrouping) {\n        console.log(...colorizeLogString(action.type));\n      } else {\n        console.groupCollapsed(...colorizeLogString(action.type));\n      }\n    }\n  }\n  preReduce(absolutePath, _state, action) {\n    if (this.enabled && !this.options.onlyRoot && !this.isIgnored(absolutePath, action)) {\n      this.lastTimer = `${absolutePath} reduce took`;\n      console.time(this.lastTimer);\n    }\n  }\n  postReduce(absolutePath, snapshot) {\n    if (this.enabled && !this.options.onlyRoot && !this.isIgnored(absolutePath, snapshot.actionPacket)) {\n      const changed = snapshot.prevState !== snapshot.nextState;\n      const logCss = changed ? normalCss : hiddenCss;\n      if (!this.options.onlyTimers) {\n        if (this.options.disableGrouping) {\n          console.log(`%c${absolutePath}`, logCss);\n        } else {\n          if (this.first) {\n            this.first = false;\n            console.group(`%c${absolutePath}`, logCss);\n          } else {\n            console.groupCollapsed(`%c${absolutePath}`, logCss);\n          }\n        }\n        console.info(\"%cprevState\", logCss, snapshot.prevState);\n        console.info(\"%cpayload\", logCss, snapshot.actionPacket.payload);\n        console.info(\"%cnextState\", logCss, snapshot.nextState);\n      }\n      console.timeEnd(`${absolutePath} reduce took`);\n      if (!this.options.onlyTimers && !this.options.disableGrouping) {\n        console.groupEnd();\n      }\n    }\n  }\n  postRootReduce(absolutePath, snapshot) {\n    if (this.enabled && !this.isIgnored(absolutePath, snapshot.actionPacket)) {\n      console.timeEnd(\"entire reduce took\");\n      if (!this.options.disableGrouping) {\n        console.groupEnd();\n      }\n    }\n  }\n  start() {\n    this.enabled = true;\n    return void 0;\n  }\n  stop() {\n    if (!this.options.disableGrouping) {\n      if (this.lastTimer) {\n        console.timeEnd(this.lastTimer);\n      }\n      console.groupEnd();\n    }\n    this.enabled = false;\n    return void 0;\n  }\n  register(_hooks) {\n    return void 0;\n  }\n}\nexport {\n  DEFAULT_OPTIONS,\n  TinySliceLoggerPlugin,\n  colorizeLogString\n};\n"],
  "mappings": "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",
  "names": []
}
