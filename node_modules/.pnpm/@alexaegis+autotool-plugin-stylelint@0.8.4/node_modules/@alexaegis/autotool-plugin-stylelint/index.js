import "autotool-plugin";
import { join } from "node:path";
const name = "@alexaegis/autotool-plugin-stylelint";
const description = "My stylelint config";
const version = "0.8.4";
const license = "MIT";
const archetype = {
  platform: "node",
  framework: "autotool",
  language: "ts",
  kind: "lib"
};
const keywords = [
  "autotool-plugin",
  "managed-by-autotool",
  "stylelint"
];
const type = "module";
const publishConfig = {
  access: "public"
};
const scripts = {
  build: "turbo run build-lib_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "build-lib_": "vite build",
  "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "lint:depcheck_": "depcheck",
  "lint:es": "turbo run lint:es_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "lint:es_": "eslint --max-warnings=0 --fix --no-error-on-unmatched-pattern .",
  "lint:format": "turbo run lint:format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "lint:format_": "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --check .",
  "lint:md": "turbo run lint:md_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "lint:md_": "remark --frail --no-stdout --silently-ignore .",
  "lint:tsc": "turbo run lint:tsc_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  "lint:tsc_": "tsc --noEmit",
  publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  publint_: "publint dist",
  all: "BUILD_REASON='publish' turbo run all_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  format: "turbo run format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  format_: "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --write .",
  test: "turbo run test_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-stylelint",
  test_: "vitest --passWithNoTests --coverage --run",
  "test:watch": "vitest --passWithNoTests --coverage"
};
const exports = {
  ".": {
    types: "./src/index.ts",
    "import": "./dist/index.js",
    require: "./dist/index.cjs",
    "default": "./dist/index.js"
  },
  "./readme": "./readme.md",
  "./stylelint.config": "./static/stylelint.config.js",
  "./stylelintignore": "./static/stylelintignore"
};
const dependencies = {
  "@alexaegis/logging": "^0.7.2",
  "autotool-plugin": "^0.3.0"
};
const devDependencies = {
  "@alexaegis/eslint-config-vitest": "^0.8.4",
  "@alexaegis/ts": "^0.8.4",
  "@alexaegis/vite": "^0.8.4",
  "@alexaegis/vitest": "^0.8.4",
  "@types/node": "^20.9.0",
  publint: "^0.2.5",
  stylelint: "^15.11.0",
  typescript: "^5.2.2",
  vite: "^4.5.0",
  vitest: "^0.34.6"
};
const packageJson = {
  name,
  description,
  version,
  license,
  "private": false,
  archetype,
  keywords,
  type,
  publishConfig,
  scripts,
  exports,
  dependencies,
  devDependencies
};
const plugin = (_options) => {
  const packageJsonFilter = {
    archetype: {
      platform: "web"
    }
  };
  return {
    name: packageJson.name,
    elements: [
      {
        description: "package stylelint config file",
        executor: "fileCopy",
        packageKind: "regular",
        packageJsonFilter,
        formatWithPrettier: true,
        sourceFile: join("static", "stylelint.config.js"),
        targetFile: ".stylelintrc.mjs",
        sourcePluginPackageName: packageJson.name
      },
      {
        description: "package stylelintignore file",
        executor: "fileCopy",
        packageKind: "regular",
        packageJsonFilter,
        sourceFile: join("static", "stylelintignore"),
        targetFile: ".stylelintignore",
        sourcePluginPackageName: packageJson.name
      },
      {
        description: "workspace stylelint scripts and devDependencies",
        executor: "packageJson",
        packageKind: "root",
        data: {
          scripts: {
            "lint:style": "turbo run lint:style_ --concurrency 16 --cache-dir .cache/turbo",
            "lint:style:css": "turbo run lint:style:css_ --concurrency 16 --cache-dir .cache/turbo",
            "lint:style:scss": "turbo run lint:style:scss_ --concurrency 16 --cache-dir .cache/turbo",
            "lint:style:html": "turbo run lint:style:html_ --concurrency 16 --cache-dir .cache/turbo"
          },
          devDependencies: {
            "@alexaegis/stylelint-config": `^${packageJson.version}`,
            stylelint: packageJson.devDependencies.stylelint
          }
        }
      },
      {
        description: "package stylelint scripts and devDependencies",
        executor: "packageJson",
        packageKind: "regular",
        packageJsonFilter,
        data: {
          scripts: {
            "lint:style": "turbo run lint:style_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            "lint:style:css": "turbo run lint:style:css_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            "lint:style:css_": "stylelint --cache true --cache-strategy content --cache-location .cache/stylelintcache-css --allow-empty-input '**/*.css'",
            "lint:style:scss": "turbo run lint:style:scss_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            "lint:style:scss_": "stylelint --customSyntax=postcss-scss --cache true --cache-strategy content --cache-location .cache/stylelintcache-scss --allow-empty-input '**/*.scss'",
            "lint:style:html": "turbo run lint:style:html_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            "lint:style:html_": "stylelint --customSyntax=postcss-html --cache true --cache-strategy content --cache-location .cache/stylelintcache-html --allow-empty-input '**/*.{html,svelte,vue,astro,xml,php}'"
          },
          devDependencies: {
            "@alexaegis/stylelint-config": `^${packageJson.version}`,
            stylelint: packageJson.devDependencies.stylelint
          }
        }
      }
    ]
  };
};
export {
  plugin as default,
  plugin
};
