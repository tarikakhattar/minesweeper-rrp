'use strict';

Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });

const autoAdapter = require('@sveltejs/adapter-auto');
const nodeAdapter = require('@sveltejs/adapter-node');
const staticAdapter = require('@sveltejs/adapter-static');
const vercelAdapter = require('@sveltejs/adapter-vercel');

/**
 * @param {string | undefined} platform
 * @returns {platform is import('./types.js').Platform}
 */
const isPlatform = (platform) => {
	return (
		platform === 'vercel' ||
		platform === 'node' ||
		platform === 'github-pages' ||
		platform === 'auto'
	);
};

/**
 * @param {string | undefined} platform
 * @returns {import('./types.js').Platform}
 */
const normalizePlatform = (platform) => {
	return isPlatform(platform) ? platform : 'auto';
};

/**
 * @param {string | undefined} platform
 * @returns {import('./types.js').Adapter}
 */
const pickAdapter = (platform = 'auto') => {
	switch (platform) {
		case 'github-pages': {
			return staticAdapter({
				fallback: 'index.html', // may differ from host to host
				strict: true,
				precompress: true,
			});
		}
		case 'vercel': {
			return vercelAdapter({});
		}
		case 'node': {
			return nodeAdapter({
				precompress: true,
			});
		}
		default: {
			return autoAdapter();
		}
	}
};

exports.isPlatform = isPlatform;
exports.normalizePlatform = normalizePlatform;
exports.pickAdapter = pickAdapter;
//# sourceMappingURL=pick-adapter.function.cjs.map
