import { not, contains } from "@alexaegis/predicate";
import "autotool-plugin";
import { join } from "node:path";
const name = "@alexaegis/autotool-plugin-depcheck";
const description = "My depcheck setup";
const version = "0.8.4";
const license = "MIT";
const archetype = {
  platform: "node",
  framework: "autotool",
  language: "ts",
  kind: "lib"
};
const keywords = [
  "autotool-plugin",
  "depcheck",
  "managed-by-autotool"
];
const type = "module";
const publishConfig = {
  access: "public"
};
const scripts = {
  build: "turbo run build-lib_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "build-lib_": "vite build",
  "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "lint:depcheck_": "depcheck",
  "lint:es": "turbo run lint:es_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "lint:es_": "eslint --max-warnings=0 --fix --no-error-on-unmatched-pattern .",
  "lint:format": "turbo run lint:format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "lint:format_": "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --check .",
  "lint:md": "turbo run lint:md_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "lint:md_": "remark --frail --no-stdout --silently-ignore .",
  "lint:tsc": "turbo run lint:tsc_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  "lint:tsc_": "tsc --noEmit",
  publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  publint_: "publint dist",
  all: "BUILD_REASON='publish' turbo run all_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  format: "turbo run format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  format_: "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --write .",
  test: "turbo run test_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-depcheck",
  test_: "vitest --passWithNoTests --coverage --run",
  "test:watch": "vitest --passWithNoTests --coverage"
};
const exports = {
  ".": {
    types: "./src/index.ts",
    "import": "./dist/index.js",
    require: "./dist/index.cjs",
    "default": "./dist/index.js"
  },
  "./depcheckrc": "./static/depcheckrc.json",
  "./readme": "./readme.md"
};
const dependencies = {
  "@alexaegis/logging": "^0.7.2",
  "@alexaegis/predicate": "^0.7.2",
  "autotool-plugin": "^0.3.0"
};
const devDependencies = {
  "@alexaegis/eslint-config-vitest": "^0.8.4",
  "@alexaegis/ts": "^0.8.4",
  "@alexaegis/vite": "^0.8.4",
  "@alexaegis/vitest": "^0.8.4",
  "@types/node": "^20.9.0",
  depcheck: "^1.4.7",
  publint: "^0.2.5",
  typescript: "^5.2.2",
  vite: "^4.5.0",
  vitest: "^0.34.6"
};
const packageJson = {
  name,
  description,
  version,
  license,
  "private": false,
  archetype,
  keywords,
  type,
  publishConfig,
  scripts,
  exports,
  dependencies,
  devDependencies
};
const plugin = (_options) => {
  return {
    name: packageJson.name,
    elements: [
      {
        description: "add depcheck scripts to workspace",
        executor: "packageJson",
        packageKind: "root",
        data: {
          scripts: {
            "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo",
            "lint:depcheck_": "depcheck"
          }
        }
      },
      {
        description: "add depcheck scripts to packages",
        executor: "packageJson",
        packageKind: "regular",
        packageJsonFilter: {
          archetype: {
            framework: not(contains("svelte"))
            // There's no svelte parser for depcheck so it would have a bunch of false reports
          }
        },
        data: {
          scripts: {
            "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            "lint:depcheck_": "depcheck"
          }
        }
      },
      {
        description: "copy workspace depcheck config",
        executor: "fileCopy",
        packageKind: "root",
        formatWithPrettier: true,
        targetFile: ".depcheckrc.json",
        sourcePluginPackageName: packageJson.name,
        sourceFile: join("static", "depcheckrc.json")
      },
      {
        description: "add depcheck as a devDependency to the workspace",
        executor: "packageJson",
        packageKind: "root",
        data: {
          devDependencies: {
            depcheck: packageJson.devDependencies.depcheck
          }
        }
      }
    ]
  };
};
export {
  plugin as default,
  plugin
};
