"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
require("autotool-plugin");
const name = "@alexaegis/autotool-plugin-publint";
const description = "Setup publint";
const version = "0.8.4";
const license = "MIT";
const archetype = {
  platform: "node",
  framework: "autotool",
  language: "ts",
  kind: "lib"
};
const keywords = [
  "autotool-plugin",
  "managed-by-autotool",
  "publint"
];
const type = "module";
const publishConfig = {
  access: "public"
};
const scripts = {
  build: "turbo run build-lib_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "build-lib_": "vite build",
  "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "lint:depcheck_": "depcheck",
  "lint:es": "turbo run lint:es_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "lint:es_": "eslint --max-warnings=0 --fix --no-error-on-unmatched-pattern .",
  "lint:format": "turbo run lint:format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "lint:format_": "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --check .",
  "lint:md": "turbo run lint:md_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "lint:md_": "remark --frail --no-stdout --silently-ignore .",
  "lint:tsc": "turbo run lint:tsc_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  "lint:tsc_": "tsc --noEmit",
  publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  publint_: "publint dist",
  all: "BUILD_REASON='publish' turbo run all_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  format: "turbo run format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  format_: "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --write .",
  test: "turbo run test_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-publint",
  test_: "vitest --passWithNoTests --coverage --run",
  "test:watch": "vitest --passWithNoTests --coverage"
};
const exports$1 = {
  ".": {
    types: "./src/index.ts",
    "import": "./dist/index.js",
    require: "./dist/index.cjs",
    "default": "./dist/index.js"
  },
  "./readme": "./readme.md"
};
const dependencies = {
  "@alexaegis/logging": "^0.7.2",
  "autotool-plugin": "^0.3.0"
};
const devDependencies = {
  "@alexaegis/eslint-config-vitest": "^0.8.4",
  "@alexaegis/ts": "^0.8.4",
  "@alexaegis/vite": "^0.8.4",
  "@alexaegis/vitest": "^0.8.4",
  "@types/node": "^20.9.0",
  publint: "^0.2.5",
  typescript: "^5.2.2",
  vite: "^4.5.0",
  vitest: "^0.34.6"
};
const packageJson = {
  name,
  description,
  version,
  license,
  "private": false,
  archetype,
  keywords,
  type,
  publishConfig,
  scripts,
  exports: exports$1,
  dependencies,
  devDependencies
};
const plugin = (_options) => {
  return {
    name: packageJson.name,
    elements: [
      {
        description: "workspace publint scripts",
        executor: "packageJson",
        packageKind: "root",
        data: {
          scripts: {
            publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo"
          }
        }
      },
      {
        description: "package publint command and scripts for public packages",
        executor: "packageJson",
        packageKind: "regular",
        packageJsonFilter: {
          private: false
        },
        data: {
          scripts: {
            publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
            publint_: "publint dist"
          },
          devDependencies: {
            publint: packageJson.devDependencies.publint
          }
        }
      },
      {
        description: "remove package publint command and scripts for private packages in case they got there somehow",
        executor: "packageJson",
        packageKind: "regular",
        packageJsonFilter: {
          private: true
        },
        data: {
          scripts: {
            publint: void 0,
            publint_: void 0
          },
          devDependencies: {
            publint: void 0
          }
        }
      }
    ]
  };
};
exports.default = plugin;
exports.plugin = plugin;
