import type { ReduceActionSliceSnapshot } from '@tinyslice/core';
import { type ActionPacket, type TinySlicePlugin, type TinySlicePluginHooks, type TinySlicePluginSliceOptions } from '@tinyslice/core';
export declare const colorizeLogString: (message: string) => string[];
export declare const DEFAULT_OPTIONS: LoggerPluginOptions;
export interface LoggerPluginOptions {
    ignorePaths: (RegExp | string)[];
    ignoreActions: (RegExp | string)[];
    disableGrouping: boolean;
    /**
     * Will only execute the root logs
     */
    onlyRoot: boolean;
    /**
     * Will only print timers
     */
    onlyTimers: boolean;
}
/**
 * This plugin lets you see changes during reduces.
 *
 * Every executed reducer is printed, ones where the state is changed are
 * printed white while unchanged ones are grey. Optimizations won't run
 * reducers where they wouldn't do anything so you'll mostly only see white
 * texts unless you have reducers that can just return the previous state
 * as is.
 *
 * It also measures each reducer how long it takes to execute and how long
 * the total action roundtrip took.
 *
 * For more accurate timing results, close the devtools panel, fire your
 * actions and then reopen to inspect. That way the cost of rendering these
 * console logs is minimal. You can also enable 'onlyTimers' and 'onlyRoot'
 * for even better results.
 */
export declare class TinySliceLoggerPlugin<State> implements TinySlicePlugin<State> {
    private options;
    private first;
    private enabled;
    private lastTimer;
    private pluginOptions;
    constructor(options?: Partial<LoggerPluginOptions>);
    private isIgnored;
    sliceOptions(): TinySlicePluginSliceOptions;
    preRootReduce(absolutePath: string, _state: unknown, action: ActionPacket): void;
    preReduce(absolutePath: string, _state: unknown, action: ActionPacket): void;
    postReduce(absolutePath: string, snapshot: ReduceActionSliceSnapshot<unknown>): void;
    postRootReduce(absolutePath: string, snapshot: ReduceActionSliceSnapshot<unknown>): void;
    start(): void;
    stop(): void;
    register(_hooks: TinySlicePluginHooks<State>): void;
}
//# sourceMappingURL=logger-plugin.d.ts.map