export type GetNext<T> = (keys: T[]) => T;
export type GetKeys<T, K> = (state: T) => K[];
export declare const getObjectKeys: GetKeys<Record<string | number, unknown>, string>;
export declare const getObjectKeysAsNumbers: GetKeys<Record<number, unknown>, number>;
export declare const getNextNumberLikeStringKey: GetNext<`${number}`>;
export declare const getNextLargestNumber: GetNext<number>;
export declare const getNextSmallestNumber: GetNext<number>;
export declare enum PremadeGetNext {
    nextLargest = "nextlargest",
    nextSmallest = "nextsmallest"
}
export type NextKeyStrategy = PremadeGetNext | GetNext<number>;
export declare const getNextKeyStrategy: (nextKeyStrategy?: NextKeyStrategy) => GetNext<number>;
//# sourceMappingURL=keyer.function.d.ts.map