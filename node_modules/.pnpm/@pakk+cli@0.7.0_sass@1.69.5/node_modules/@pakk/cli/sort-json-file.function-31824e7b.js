import { sortObject } from "@alexaegis/common";
import { readJson, writeJson } from "@alexaegis/fs";
import { normalizeSortingPreferenceForPackageJson } from "@alexaegis/workspace-tools";
import { basename } from "node:path";
const sortJsonFile = async (path, options) => {
  const content = await readJson(path);
  if (content) {
    let sortPreferences = options.sortingPreference;
    if (basename(path) === "package.json") {
      sortPreferences = normalizeSortingPreferenceForPackageJson(sortPreferences);
    }
    const sortedContent = sortObject(content, sortPreferences);
    const alreadySorted = JSON.stringify(content) === JSON.stringify(sortedContent);
    if (!options.dry && !options.check) {
      await writeJson(sortedContent, path, options);
    } else if (options.dry && !options.check) {
      options.logger?.info(`sorting ${path}`);
    } else if (options.check && !alreadySorted) {
      options.logger?.info(`not sorted: ${path}`);
    }
    return alreadySorted;
  } else {
    return false;
  }
};
export {
  sortJsonFile as s
};
//# sourceMappingURL=sort-json-file.function-31824e7b.js.map
