{"version":3,"file":"sort-json-file.function-31824e7b.js","sources":["../src/sort/sort-json-file.function.ts"],"sourcesContent":["import { sortObject, type ObjectKeyOrder } from '@alexaegis/common';\nimport { readJson, writeJson } from '@alexaegis/fs';\nimport type { Logger } from '@alexaegis/logging';\nimport { normalizeSortingPreferenceForPackageJson } from '@alexaegis/workspace-tools';\nimport { basename } from 'node:path';\n\n/**\n * Reads a json file, sorts it based on a sorting config then writes it back,\n * if available also formats it with prettier. If the file is named\n * `package.json` it may override some rules to always produce a functional\n * result.\n *\n * @param path\n *\n * @return was sorted or not\n */\nexport const sortJsonFile = async (\n\tpath: string,\n\toptions: SortJsonFileOptions,\n): Promise<boolean> => {\n\tconst content = await readJson<Record<string, unknown>>(path);\n\tif (content) {\n\t\tlet sortPreferences = options.sortingPreference;\n\n\t\tif (basename(path) === 'package.json') {\n\t\t\tsortPreferences = normalizeSortingPreferenceForPackageJson(sortPreferences);\n\t\t}\n\n\t\tconst sortedContent = sortObject(content, sortPreferences);\n\n\t\tconst alreadySorted = JSON.stringify(content) === JSON.stringify(sortedContent);\n\n\t\tif (!options.dry && !options.check) {\n\t\t\tawait writeJson(sortedContent, path, options);\n\t\t} else if (options.dry && !options.check) {\n\t\t\toptions.logger?.info(`sorting ${path}`);\n\t\t} else if (options.check && !alreadySorted) {\n\t\t\toptions.logger?.info(`not sorted: ${path}`);\n\t\t}\n\n\t\treturn alreadySorted;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport interface SortJsonFileOptions {\n\tsortingPreference: ObjectKeyOrder;\n\t/**\n\t * @defaultValue true\n\t */\n\tautoPrettier?: boolean;\n\t/**\n\t * @defaultValue false\n\t */\n\tdry?: boolean;\n\t/**\n\t * If using check mode, it won't write, but won't log either\n\t * @defaultValue false\n\t */\n\tcheck?: boolean;\n\n\tlogger?: Logger<unknown>;\n}\n"],"names":[],"mappings":";;;;AAgBa,MAAA,eAAe,OAC3B,MACA,YACsB;AAChB,QAAA,UAAU,MAAM,SAAkC,IAAI;AAC5D,MAAI,SAAS;AACZ,QAAI,kBAAkB,QAAQ;AAE1B,QAAA,SAAS,IAAI,MAAM,gBAAgB;AACtC,wBAAkB,yCAAyC,eAAe;AAAA,IAC3E;AAEM,UAAA,gBAAgB,WAAW,SAAS,eAAe;AAEzD,UAAM,gBAAgB,KAAK,UAAU,OAAO,MAAM,KAAK,UAAU,aAAa;AAE9E,QAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,OAAO;AAC7B,YAAA,UAAU,eAAe,MAAM,OAAO;AAAA,IAClC,WAAA,QAAQ,OAAO,CAAC,QAAQ,OAAO;AACzC,cAAQ,QAAQ,KAAK,WAAW,IAAI,EAAE;AAAA,IAC5B,WAAA,QAAQ,SAAS,CAAC,eAAe;AAC3C,cAAQ,QAAQ,KAAK,eAAe,IAAI,EAAE;AAAA,IAC3C;AAEO,WAAA;AAAA,EAAA,OACD;AACC,WAAA;AAAA,EACR;AACD;"}