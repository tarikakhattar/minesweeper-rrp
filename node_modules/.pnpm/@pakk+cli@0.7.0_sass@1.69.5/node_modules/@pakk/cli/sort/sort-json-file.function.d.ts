import { type ObjectKeyOrder } from '@alexaegis/common';
import type { Logger } from '@alexaegis/logging';
/**
 * Reads a json file, sorts it based on a sorting config then writes it back,
 * if available also formats it with prettier. If the file is named
 * `package.json` it may override some rules to always produce a functional
 * result.
 *
 * @param path
 *
 * @return was sorted or not
 */
export declare const sortJsonFile: (path: string, options: SortJsonFileOptions) => Promise<boolean>;
export interface SortJsonFileOptions {
    sortingPreference: ObjectKeyOrder;
    /**
     * @defaultValue true
     */
    autoPrettier?: boolean;
    /**
     * @defaultValue false
     */
    dry?: boolean;
    /**
     * If using check mode, it won't write, but won't log either
     * @defaultValue false
     */
    check?: boolean;
    logger?: Logger<unknown>;
}
//# sourceMappingURL=sort-json-file.function.d.ts.map