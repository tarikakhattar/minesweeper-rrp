{"version":3,"file":"sort-json.cjs","sources":["../../src/bin/sort-json.ts"],"sourcesContent":["import { YargsBuilder, yargsForDryOption } from '@alexaegis/cli-tools';\nimport { createLogger } from '@alexaegis/logging';\nimport type { PackageJson } from '@alexaegis/workspace-tools';\nimport { createJsonSortingPreferenceNormalizer } from '@alexaegis/workspace-tools/sort';\n\nimport { basename } from 'node:path';\nimport { type Argv } from 'yargs';\nimport packageJson from '../../package.json';\n\nimport { sortJsonFile } from '../sort/index.js';\n\n// TODO: not implemented\nconst yargsForSortJson = <T>(yargs: Argv<T>): Argv<T & { check: boolean }> => {\n\treturn yargs.option('check', {\n\t\tboolean: true,\n\t\tdescription:\n\t\t\t'Checks if every packageJson in a workspace conforms to the ordering, fails if not',\n\t\tdefault: false,\n\t});\n};\n\nconst yarguments = YargsBuilder.withDefaults(packageJson as PackageJson)\n\t.add(yargsForSortJson)\n\t.add(yargsForDryOption)\n\t.build();\n\nvoid (async () => {\n\tconst options = await yarguments.parseAsync();\n\tconst logger = createLogger({ name: 'sort-json' });\n\n\tconst sortResults = await Promise.allSettled(\n\t\toptions._.map(async (positional) => {\n\t\t\tconst fileName = basename(positional.toString());\n\t\t\tconst sortNormalizer = await createJsonSortingPreferenceNormalizer(fileName);\n\t\t\tconst sortingPreference = sortNormalizer();\n\n\t\t\treturn await sortJsonFile(positional.toString(), {\n\t\t\t\tsortingPreference,\n\t\t\t\tcheck: options.check,\n\t\t\t\tdry: options.dry,\n\t\t\t\tlogger,\n\t\t\t});\n\t\t}),\n\t);\n\n\tif (\n\t\toptions.check &&\n\t\tsortResults.some((result) => result.status === 'rejected' || !result.value)\n\t) {\n\t\t// eslint-disable-next-line unicorn/no-process-exit\n\t\tprocess.exit(1);\n\t}\n})();\n"],"names":["YargsBuilder","packageJson","yargsForDryOption","createLogger","basename","createJsonSortingPreferenceNormalizer","sortJsonFile"],"mappings":";;;;;;;;;;;AAYA,MAAM,mBAAmB,CAAI,UAAiD;AACtE,SAAA,MAAM,OAAO,SAAS;AAAA,IAC5B,SAAS;AAAA,IACT,aACC;AAAA,IACD,SAAS;AAAA,EAAA,CACT;AACF;AAEA,MAAM,aAAaA,SAAa,aAAA,aAAaC,SAAAA,WAA0B,EACrE,IAAI,gBAAgB,EACpB,IAAIC,0BAAiB,EACrB,MAAM;AAER,MAAM,YAAY;AACX,QAAA,UAAU,MAAM,WAAW;AACjC,QAAM,SAASC,QAAA,aAAa,EAAE,MAAM,YAAa,CAAA;AAE3C,QAAA,cAAc,MAAM,QAAQ;AAAA,IACjC,QAAQ,EAAE,IAAI,OAAO,eAAe;AACnC,YAAM,WAAWC,UAAA,SAAS,WAAW,SAAU,CAAA;AACzC,YAAA,iBAAiB,MAAMC,2CAAsC,QAAQ;AAC3E,YAAM,oBAAoB;AAE1B,aAAO,MAAMC,sBAAA,aAAa,WAAW,YAAY;AAAA,QAChD;AAAA,QACA,OAAO,QAAQ;AAAA,QACf,KAAK,QAAQ;AAAA,QACb;AAAA,MAAA,CACA;AAAA,IAAA,CACD;AAAA,EAAA;AAGF,MACC,QAAQ,SACR,YAAY,KAAK,CAAC,WAAW,OAAO,WAAW,cAAc,CAAC,OAAO,KAAK,GACzE;AAED,YAAQ,KAAK,CAAC;AAAA,EACf;AACD,GAAG;"}