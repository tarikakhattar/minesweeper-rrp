"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const fs = require("@alexaegis/fs");
const node_path = require("node:path");
const prettierCommand = "prettier --check";
const tscCommand = "tsc --noEmit";
const eslintSingleFileCommand = "eslint --max-warnings=0 --no-ignore";
const markdownCommand = "remark --frail --no-stdout --silently-ignore";
const lintStagedConfig = {
  "**/!(shims)/(*.(ts|js|cts|cjs|mts|mjs|jsx|tsx)|tsconfig*.json)?(x)": (filenames) => {
    const groups = fs.groupByCommonNearestFile(filenames, "tsconfig.json");
    return Object.keys(groups).map(
      (tsRoot) => `${tscCommand} --project ${node_path.join(tsRoot, "tsconfig.json")}`
    );
  },
  "**/!(shims)/*.(ts|js|cts|cjs|mts|mjs)": [eslintSingleFileCommand, prettierCommand],
  "*.css": ["stylelint", prettierCommand],
  "*.scss": ["stylelint --customSyntax=postcss-scss", prettierCommand],
  "*.(html|svelte|vue|astro|xml|php)": ["stylelint --customSyntax=postcss-html"],
  "*.(html|vue|astro|xml)": [prettierCommand],
  "(*.json|.eslintrc|.prettierrc|.stylelintrc|.markdownlintrc)": [
    eslintSingleFileCommand,
    prettierCommand
  ],
  "*.svelte": ["svelte-check", prettierCommand],
  "*.md": [markdownCommand, prettierCommand],
  "*.(yml|yaml)": [prettierCommand]
};
exports.lintStagedConfig = lintStagedConfig;
