"use strict";
const logging = require("@alexaegis/logging");
const workspaceTools = require("@alexaegis/workspace-tools");
const promises = require("node:fs/promises");
const node_path = require("node:path");
const index = require("../index.cjs");
require("@alexaegis/common");
require("globby");
const mergeWorkspaceLcovReports = async () => {
  const logger = logging.createLogger({ name: "merge-lcov" });
  const workspaceRoot = workspaceTools.getWorkspaceRoot();
  logger.info("Starting mergeWorkspaceLcovReports");
  if (workspaceRoot) {
    const mergedLcov = await index.mergeLcovReportsInWorkspace({
      skipWorkspaceRoot: true,
      logger
    });
    await promises.mkdir(node_path.join(workspaceRoot, "coverage"), { recursive: true });
    await promises.writeFile(node_path.join(workspaceRoot, "coverage", index.LCOV_INFO_FILE_NAME), mergedLcov);
  } else {
    logger.error("Not in a workspace!");
    process.exit(1);
  }
};
void (async () => {
  await mergeWorkspaceLcovReports();
})();
