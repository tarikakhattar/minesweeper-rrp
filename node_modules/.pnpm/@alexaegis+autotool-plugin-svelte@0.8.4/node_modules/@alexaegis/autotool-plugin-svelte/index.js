import { contains } from "@alexaegis/predicate";
import "autotool-plugin";
import { join } from "node:path";
const name = "@alexaegis/autotool-plugin-svelte";
const description = "Setup svelte";
const version = "0.8.4";
const license = "MIT";
const archetype = {
  platform: "node",
  framework: "autotool",
  language: "ts",
  kind: "lib"
};
const keywords = [
  "autotool-plugin",
  "managed-by-autotool",
  "svelte"
];
const type = "module";
const publishConfig = {
  access: "public"
};
const scripts = {
  build: "turbo run build-lib_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "build-lib_": "vite build",
  "lint:depcheck": "turbo run lint:depcheck_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "lint:depcheck_": "depcheck",
  "lint:es": "turbo run lint:es_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "lint:es_": "eslint --max-warnings=0 --fix --no-error-on-unmatched-pattern .",
  "lint:format": "turbo run lint:format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "lint:format_": "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --check .",
  "lint:md": "turbo run lint:md_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "lint:md_": "remark --frail --no-stdout --silently-ignore .",
  "lint:tsc": "turbo run lint:tsc_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  "lint:tsc_": "tsc --noEmit",
  publint: "BUILD_REASON='publish' turbo run publint_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  publint_: "publint dist",
  all: "BUILD_REASON='publish' turbo run all_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  format: "turbo run format_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  format_: "prettier --cache-location .cache/prettier --plugin prettier-plugin-svelte --plugin prettier-plugin-tailwindcss --write .",
  test: "turbo run test_ --concurrency 16 --cache-dir .cache/turbo --filter @alexaegis/autotool-plugin-svelte",
  test_: "vitest --passWithNoTests --coverage --run",
  "test:watch": "vitest --passWithNoTests --coverage"
};
const exports = {
  ".": {
    types: "./src/index.ts",
    "import": "./dist/index.js",
    require: "./dist/index.cjs",
    "default": "./dist/index.js"
  },
  "./package-svelte-tsconfig": "./static/package-svelte-tsconfig.json",
  "./package-sveltekit-tsconfig": "./static/package-sveltekit-tsconfig.json",
  "./readme": "./readme.md",
  "./svelte.config": "./static/svelte.config.txt",
  "./sveltekit.config": "./static/sveltekit.config.txt",
  "./sveltelib.config": "./static/sveltelib.config.txt",
  "./vite-svelte-app.config": "./static/vite-svelte-app.config.ts",
  "./vite-sveltekit-app.config": "./static/vite-sveltekit-app.config.ts"
};
const dependencies = {
  "@alexaegis/coverage-tools": "^0.7.2",
  "@alexaegis/logging": "^0.7.2",
  "@alexaegis/predicate": "^0.7.2",
  "autotool-plugin": "^0.3.0"
};
const devDependencies = {
  "@alexaegis/eslint-config-vitest": "^0.8.4",
  "@alexaegis/ts": "^0.8.4",
  "@alexaegis/vite": "^0.8.4",
  "@alexaegis/vitest": "^0.8.4",
  "@pakk/cli": "^0.7.0",
  "@sveltejs/adapter-auto": "^2.1.1",
  "@sveltejs/adapter-node": "^1.3.1",
  "@sveltejs/adapter-static": "^2.0.3",
  "@sveltejs/adapter-vercel": "^3.0.3",
  "@sveltejs/kit": "^1.27.5",
  "@sveltejs/package": "^2.2.2",
  "@sveltejs/vite-plugin-svelte": "^2.5.2",
  "@types/node": "^20.9.0",
  publint: "^0.2.5",
  svelte: "^4.2.3",
  "svelte-check": "^3.6.0",
  "svelte-preprocess": "^5.1.0",
  typescript: "^5.2.2",
  vite: "^4.5.0",
  vitest: "^0.34.6"
};
const packageJson = {
  name,
  description,
  version,
  license,
  "private": false,
  archetype,
  keywords,
  type,
  publishConfig,
  scripts,
  exports,
  dependencies,
  devDependencies
};
const svelteCommonSetupPlugin = {
  name: `${packageJson.name}-common`,
  packageJsonFilter: {
    archetype: {
      framework: /^svelte.*$/
    }
  },
  elements: [
    {
      description: "workspace svelte-check scripts and devDependencies",
      executor: "packageJson",
      packageKind: "root",
      data: {
        scripts: {
          "lint:svelte": "turbo run lint:svelte_ --concurrency 16 --cache-dir .cache/turbo"
        },
        devDependencies: {
          "svelte-check": packageJson.devDependencies["svelte-check"]
          // added to the root for lint-staged
        }
      }
    },
    {
      description: "package svelte-check scripts and devDependencies",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        scripts: {
          "lint:svelte": "turbo run lint:svelte_ --concurrency 16 --cache-dir .cache/turbo --filter ${packageName}",
          "lint:svelte_": "svelte-check --tsconfig ./tsconfig.json"
        },
        devDependencies: {
          "svelte-check": packageJson.devDependencies["svelte-check"]
        }
      }
    },
    {
      description: "package svelte devDependency",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        devDependencies: {
          svelte: packageJson.devDependencies.svelte,
          // It's used everywhere
          "@alexaegis/svelte-config": `^${packageJson.version}`
          // versioned together
        }
      }
    }
  ]
};
const svelteNonKitCommonSetupPlugin = {
  name: `${packageJson.name}-common`,
  packageJsonFilter: {
    archetype: {
      framework: /^svelte$/
    }
  },
  elements: [
    {
      description: "remove kit for non sveltekit svelte packages",
      executor: "packageJson",
      packageKind: "regular",
      consolidationPass: 1,
      data: {
        devDependencies: {
          "@sveltejs/kit": void 0
        }
      }
    },
    {
      description: "remove svelte-kit sync on postinstall for non kit packages",
      executor: "packageJson",
      packageKind: "regular",
      consolidationPass: 1,
      packageJsonFilter: {
        scripts: {
          postinstall: contains("svelte-kit sync")
        }
      },
      data: {
        scripts: {
          postinstall: void 0
        }
      }
    },
    {
      description: "svelte config dependencies",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        devDependencies: {
          "svelte-preprocess": packageJson.devDependencies["svelte-preprocess"]
        }
      }
    },
    {
      description: "copy tsconfig for svelte (non-kit) packages",
      executor: "fileCopy",
      packageKind: "regular",
      formatWithPrettier: true,
      targetFile: "tsconfig.json",
      sourcePluginPackageName: packageJson.name,
      sourceFile: join("static", "package-svelte-tsconfig.json")
    }
  ]
};
const svelteAppCommonSetupPlugin = {
  name: `${packageJson.name}-app-common`,
  packageJsonFilter: {
    archetype: {
      framework: /^svelte.*$/,
      kind: "app"
    }
  },
  elements: [
    {
      description: "svelte vite app start script",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        scripts: {
          start: "TARGET_ENV='local' vite"
        }
      }
    }
  ]
};
const svelteKitCommonSetupPlugin = {
  name: `${packageJson.name}-kit`,
  packageJsonFilter: {
    archetype: {
      framework: /^sveltekit$/
    }
  },
  elements: [
    {
      description: "sveltekit sync on local postinstall",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        scripts: {
          "kit:sync": "svelte-kit sync",
          // While the pakk directive makes no sense for apps, it does for libs. It doesn't hurt to have it for both though.
          postinstall: "svelte-kit sync # pakk:not-distributed"
          // This will make sure you get the autogenerated tsconfig file immediately
        }
      }
    },
    {
      description: "copy tsconfig for sveltekit packages",
      executor: "fileCopy",
      packageKind: "regular",
      formatWithPrettier: true,
      targetFile: "tsconfig.json",
      sourcePluginPackageName: packageJson.name,
      sourceFile: join("static", "package-sveltekit-tsconfig.json")
    }
  ]
};
const svelteKitAppSetupPlugin = {
  name: `${packageJson.name}-kit-app`,
  packageJsonFilter: {
    archetype: {
      framework: /^sveltekit$/,
      kind: "app"
    }
  },
  elements: [
    {
      description: "sveltekit dependencies",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        devDependencies: {
          "@sveltejs/kit": packageJson.devDependencies["@sveltejs/kit"]
        }
      }
    },
    {
      description: "package svelte.config.js file for kit",
      executor: "fileCopy",
      packageKind: "regular",
      formatWithPrettier: true,
      sourceFile: join("static", "sveltekit.config.txt"),
      targetFile: "svelte.config.js",
      sourcePluginPackageName: packageJson.name
    },
    {
      description: "sveltekit adapters",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        devDependencies: {
          "@sveltejs/adapter-auto": packageJson.devDependencies["@sveltejs/adapter-auto"],
          "@sveltejs/adapter-node": packageJson.devDependencies["@sveltejs/adapter-node"],
          "@sveltejs/adapter-static": packageJson.devDependencies["@sveltejs/adapter-static"],
          "@sveltejs/adapter-vercel": packageJson.devDependencies["@sveltejs/adapter-vercel"]
          // let's just assume it's needed.
        }
      }
    },
    {
      description: "sveltekit application vite config",
      executor: "fileCopy",
      packageKind: "regular",
      sourceFile: join("static", "vite-sveltekit-app.config.ts"),
      targetFile: "vite.config.ts",
      sourcePluginPackageName: packageJson.name
    },
    {
      description: "remove unneeded dependencies meant for non-kit only",
      executor: "packageJson",
      packageKind: "regular",
      consolidationPass: 1,
      data: {
        devDependencies: {
          "@sveltejs/vite-plugin-svelte": void 0
          // Kit ships its own vite plugin
        }
      }
    }
  ]
};
const svelteNonKitAppSetupPlugin = {
  name: `${packageJson.name}-app`,
  packageJsonFilter: {
    archetype: {
      framework: /^svelte$/,
      kind: "app"
    }
  },
  elements: [
    {
      description: "svelte application (non-kit) vite dependencies",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        devDependencies: {
          "@sveltejs/vite-plugin-svelte": packageJson.devDependencies["@sveltejs/vite-plugin-svelte"]
        }
      }
    },
    {
      description: "svelte application (non-kit) vite config",
      executor: "fileCopy",
      packageKind: "regular",
      sourceFile: join("static", "vite-svelte-app.config.ts"),
      targetFile: "vite.config.ts",
      sourcePluginPackageName: packageJson.name
    },
    {
      description: "package svelte.config.js for non kit apps",
      executor: "fileCopy",
      packageKind: "regular",
      formatWithPrettier: true,
      sourceFile: join("static", "svelte.config.txt"),
      targetFile: "svelte.config.js",
      sourcePluginPackageName: packageJson.name
    }
  ]
};
const svelteLibarySetupPlugin = {
  name: `${packageJson.name}-lib`,
  packageJsonFilter: {
    archetype: {
      framework: /^svelte.*$/,
      kind: "lib"
    }
  },
  elements: [
    {
      description: "package svelte library scripts and devDependencies",
      executor: "packageJson",
      packageKind: "regular",
      data: {
        scripts: {
          ["build-lib_"]: "pakk --svelte --target-package-json-kind development && svelte-package --input src && pakk --svelte --target-package-json-kind distribution"
        },
        devDependencies: {
          "@pakk/cli": packageJson.devDependencies["@pakk/cli"],
          "@sveltejs/package": packageJson.devDependencies["@sveltejs/package"],
          ["@alexaegis/vite"]: void 0,
          vite: void 0
        }
      }
    },
    {
      description: "remove unnecessary vite config",
      executor: "fileRemove",
      packageKind: "regular",
      targetFile: "vite.config.ts"
    },
    {
      description: "package svelte.config.js for libs",
      executor: "fileCopy",
      packageKind: "regular",
      formatWithPrettier: true,
      sourceFile: join("static", "sveltelib.config.txt"),
      targetFile: "svelte.config.js",
      sourcePluginPackageName: packageJson.name
    }
  ]
};
const plugin = (_options) => {
  console.log("lasodlas");
  return [
    svelteCommonSetupPlugin,
    svelteAppCommonSetupPlugin,
    svelteLibarySetupPlugin,
    svelteKitCommonSetupPlugin,
    svelteKitAppSetupPlugin,
    svelteNonKitCommonSetupPlugin,
    svelteNonKitAppSetupPlugin
  ];
};
export {
  plugin as default,
  plugin,
  svelteAppCommonSetupPlugin,
  svelteCommonSetupPlugin,
  svelteKitAppSetupPlugin,
  svelteKitCommonSetupPlugin,
  svelteLibarySetupPlugin,
  svelteNonKitAppSetupPlugin,
  svelteNonKitCommonSetupPlugin
};
