import type { PackageJson, RegularWorkspacePackage } from '@alexaegis/workspace-tools';
import type { NormalizedPakkContext } from '../../index.js';
import { type PackageJsonKindType } from '../../package-json/index.js';
import type { PakkFeature } from '../pakk-feature.type.js';
/**
 * Removes duplicated dependency and peerDependency entries leaving only the
 * peerDependencies behind.
 *
 * The point of this is to let peerDependencies install locally too by defining
 * them twice, once as a peerDependency, and once as a normal dependency. This
 * step will remove the one that was meant to only be present locally.
 */
export declare class AutoPeer implements PakkFeature {
    readonly order = 5;
    private readonly context;
    constructor(context: NormalizedPakkContext);
    postprocess(workspacePackage: RegularWorkspacePackage, packageJsonKind: PackageJsonKindType): PackageJson;
}
//# sourceMappingURL=auto-peer.class.d.ts.map