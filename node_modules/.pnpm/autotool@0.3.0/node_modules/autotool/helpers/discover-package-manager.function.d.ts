import type { RootWorkspacePackage } from '@alexaegis/workspace-tools';
import type { NormalizedAutotoolOptions } from 'autotool-plugin';
export type PackageManagerName = 'npm' | 'pnpm' | 'yarn';
export declare const installCommands: {
    [K in PackageManagerName]: `${K}${string}`;
};
export interface PackageManager<T extends PackageManagerName = PackageManagerName> {
    name: T;
    installCommand: (typeof installCommands)[T];
}
/**
 * Returns the most likely packageManager being used, or errors out if none
 * found.
 *
 * @throws if no package manager is found
 */
export declare const discoverPackageManager: (rootWorkspacePackage: RootWorkspacePackage, options: NormalizedAutotoolOptions) => Promise<PackageManager>;
//# sourceMappingURL=discover-package-manager.function.d.ts.map