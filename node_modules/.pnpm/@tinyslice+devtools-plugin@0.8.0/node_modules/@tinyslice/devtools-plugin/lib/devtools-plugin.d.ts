import type { TinySlicePlugin, TinySlicePluginHooks } from '@tinyslice/core';
import type { ReduxDevtoolsExtension, ReduxDevtoolsExtensionConfig } from './redux-devtools.type.js';
export declare const DEFAULT_DEVTOOLS_OPTIONS: Partial<ReduxDevtoolsExtensionConfig>;
/**
 * Skipping is not implemented
 *
 * Note that the devtools does not show keys defined as undefined so they are
 * normalized to null
 */
export declare class TinySliceDevtoolPlugin<State = unknown> implements TinySlicePlugin<State> {
    private readonly options;
    private extension?;
    private extensionConnection?;
    private sink;
    private unsubscribeStateInjector?;
    private hooks;
    private committedState;
    private lastState;
    private initialState;
    private actionId;
    private actions;
    private actionsTurnedOff;
    private additionalTriggers;
    constructor(options: ReduxDevtoolsExtensionConfig);
    registerAdditionalTrigger: (trigger: () => void) => void;
    register: (hooks: TinySlicePluginHooks<State>) => void;
    onError: (error: unknown) => void;
    private connect;
    private disconnect;
    start: () => void;
    stop: () => void;
    error(error: string | Error): void;
    static getExtension<State>(): ReduxDevtoolsExtension<State> | undefined;
}
//# sourceMappingURL=devtools-plugin.d.ts.map